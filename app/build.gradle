
apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply from: '../jacoco.gradle'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    defaultConfig {
        applicationId "com.littlesword.ozbargain"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    productFlavors {
        mock {
            applicationId = "com.littlesword.ozbargain.mock"
        }
        prod {
            applicationId = "com.littlesword.ozbargain"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug{
            testCoverageEnabled true
        }
    }

    dexOptions {
        if(isCi) {
            // CircleCi allow max 4G memory for all processes together and dex does exceed it
            // with his parallel execution. Shrink the javaMaxHeapSize does it only per dex process
            // but the combination exceed the max memory and to less value let it run for long time.
            // javaMaxHeapSize "1024M"

            // Speed up build for CI by ignoring extra build steps which should speed up build for developers.
            // Also reduce memory usage by avoiding multiple (pre) dex processes.
            incremental false
            preDexLibraries = false
        }
    }
}






dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'com.google.truth:truth:0.27'
    testCompile 'junit:junit:4.12'

    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"

    androidTestCompile "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile ("com.android.support.test.espresso:espresso-contrib:2.2.1"){
        exclude group: 'javax.inject'
        exclude group: 'com.android.support'
    }
    androidTestCompile "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestCompile "com.google.truth:truth:0.27"

    // Set this dependency to build and run UI Automator tests
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile "com.android.support.test.espresso:espresso-intents:2.2.1"
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.facebook.fresco:fresco:0.6.1'
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex:rxjava:1.0.14'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.google.code.gson:gson:2.5'
    compile 'com.google.dagger:dagger:2.0.2'
    compile 'com.google.dagger:dagger-compiler:2.0.2'
    compile 'javax.annotation:javax.annotation-api:1.2'
}